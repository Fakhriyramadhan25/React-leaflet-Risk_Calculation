{"func":
{"signature_":
{"args":
[{"description":"The collection from which to select the first entry.","type":"FeatureCollection","name":"collection","default":null}],"description":
"Returns the first entry from a given collection.","returns":"Element","name":"Collection.first"}},"args":{"collection":{"func":{"signature_":{"args":
[{"description":"The collection to limit or order.","type":"FeatureCollection","name":"collection","default":null},{"description":
"The maximum number of items in the output collection. null is used to represent no limit.","type":"Integer","name":"limit","default":null,"optional":true},
{"description":"The property on which the collection is sorted.","type":"String","name":"key","default":null,"optional":true},
{"description":"Whether the sorting is ascending rather than descending.","type":"Boolean","name":"ascending","default":true,"optional":true}],
"description":"Applies an ordering and limit to a given collection.","returns":"FeatureCollection","name":"Collection.limit"}},
"args":{"collection":{"func":{"signature_":{"args":[{"description":"The collection to filter.","type":"FeatureCollection","name":"collection","default":null},
{"description":"The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g.: \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not' and 'in' for inList.",
"type":"Object","name":"filter","default":null}],"description":"Applies a filter to a given collection.","returns":"FeatureCollection","name":"Collection.filter"}},
"args":{"collection":{"func":{"signature_":{"args":[{"description":"The collection to filter.","type":"FeatureCollection","name":"collection","default":null},
{"description":"The filter to apply to the collection. Either a Filter object or a string to be parsed into a Filter object (e.g.: \"property > value\"). Supported operators include: >, >=, <, <=, ==, !=, (), !, &&, ||, as well as 'and', 'or', 'not' and 'in' for inList.",
"type":"Object","name":"filter","default":null}],"description":"Applies a filter to a given collection.","returns":"FeatureCollection","name":"Collection.filter"}},"args":
{"collection":{"func":{"signature_":{"args":[{"description":"The asset ID of the image collection.","type":"String","name":"id","default":null},{"description":
"The version of the asset. -1 signifies the latest version.","type":"Long","name":"version","default":null,"optional":true}],"description":
"Returns the image collection given its ID.","returns":"ImageCollection","name":"ImageCollection.load"}},"args":{"id":"LANDSAT/LC8_L1T_TOA"},
"varName":null,"sourceFrame":null},"filter":{"func":{"signature_":{"args":[{"description":"A selector for the left operand. Should not be specified if leftValue is specified.",
"type":"String","name":"leftField","default":null,"optional":true},{"description":"The value of the right operand. Should not be specified if rightField is specified.",
"type":"Object","name":"rightValue","default":null,"optional":true},{"description":"A selector for the right operand. Should not be specified if rightValue is specified.",
"type":"String","name":"rightField","default":null,"optional":true},{"description":"The value of the left operand. Should not be specified if leftField is specified.",
"type":"Object","name":"leftValue","default":null,"optional":true},{"description":"The maximum reprojection error allowed during filter application.","type":"ErrorMargin","name":"maxError","default":{"unit":"meters","type":"ErrorMargin","value":0.1},"optional":true}],"description":"Creates a unary or binary filter that passes if the left geometry intersects the right geometry.","returns":"Filter","name":"Filter.intersects"}},"args":{"leftField":{"func":null,"args":null,"varName":null,"sourceFrame":null,"string_":".all"},"rightValue":{"func":{"signature_":{"args":[{"description":"The geometry of the feature.","type":"Geometry","name":"geometry","default":null,"optional":true},{"description":"The properties of the feature.","type":"Dictionary","name":"metadata","default":{},"optional":true},{"description":"Obsolete; has no effect.","type":"String","name":"geometryKey","default":null,"optional":true}],"description":"Returns a Feature composed of the given geometry and metadata.","returns":"Feature","name":"Feature"}},"args":{"geometry":{"func":null,"args":null,"varName":null,"sourceFrame":null,"type_":"Polygon","coordinates_":[[[8.642120361328127,48.84837497332759],[8.642120361328127,48.928788498394496],[8.898925781250002,48.928788498394496],[8.898925781250002,48.84837497332759]]],"geometries_":null,"evenOdd_":true}},"varName":null,"sourceFrame":null}},"varName":null,"sourceFrame":null,"filter_":[{"func":{"signature_":{"args":[{"description":"A selector for the left operand. Should not be specified if leftValue is specified.","type":"String","name":"leftField","default":null,"optional":true},{"description":"The value of the right operand. Should not be specified if rightField is specified.","type":"Object","name":"rightValue","default":null,"optional":true},{"description":"A selector for the right operand. Should not be specified if rightValue is specified.","type":"String","name":"rightField","default":null,"optional":true},{"description":"The value of the left operand. Should not be specified if leftField is specified.","type":"Object","name":"leftValue","default":null,"optional":true},{"description":"The maximum reprojection error allowed during filter application.","type":"ErrorMargin","name":"maxError","default":{"unit":"meters","type":"ErrorMargin","value":0.1},"optional":true}],"description":"Creates a unary or binary filter that passes if the left geometry intersects the right geometry.","returns":"Filter","name":"Filter.intersects"}},"args":{"leftField":{"func":null,"args":null,"varName":null,"sourceFrame":null,"string_":".all"},"rightValue":{"func":{"signature_":{"args":[{"description":"The geometry of the feature.","type":"Geometry","name":"geometry","default":null,"optional":true},{"description":"The properties of the feature.","type":"Dictionary","name":"metadata","default":{},"optional":true},{"description":"Obsolete; has no effect.","type":"String","name":"geometryKey","default":null,"optional":true}],"description":"Returns a Feature composed of the given geometry and metadata.","returns":"Feature","name":"Feature"}},"args":{"geometry":{"func":null,"args":null,"varName":null,"sourceFrame":null,"type_":"Polygon","coordinates_":[[[8.642120361328127,48.84837497332759],[8.642120361328127,48.928788498394496],[8.898925781250002,48.928788498394496],[8.898925781250002,48.84837497332759]]],"geometries_":null,"evenOdd_":true}},"varName":null,"sourceFrame":null}},"varName":null,"sourceFrame":null}]}},"varName":null},"filter":{"func":{"signature_":{"args":[{"description":"A selector for the left operand. Should not be specified if leftValue is specified.","type":"String","name":"leftField","default":null,"optional":true},{"description":"The value of the right operand. Should not be specified if rightField is specified.","type":"Object","name":"rightValue","default":null,"optional":true},{"description":"A selector for the right operand. Should not be specified if rightValue is specified.","type":"String","name":"rightField","default":null,"optional":true},{"description":"The value of the left operand. Should not be specified if leftField is specified.","type":"Object","name":"leftValue","default":null,"optional":true}],"description":"Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.","returns":"Filter","name":"Filter.dateRangeContains"}},"args":{"rightField":{"func":null,"args":null,"varName":null,"sourceFrame":null,"string_":"system:time_start"},"leftValue":{"func":{"signature_":{"args":[{"description":"","type":"Object","name":"start","default":null},{"description":"","type":"Object","name":"end","default":null,"optional":true},{"description":"If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.","type":"String","name":"timeZone","default":null,"optional":true}],"description":"Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.","returns":"DateRange","name":"DateRange","isConstructor":true}},"args":{"start":"2015-12-01","end":"2015-12-31"},"varName":null,"sourceFrame":null}},"varName":null,"sourceFrame":null,"filter_":[{"func":{"signature_":{"args":[{"description":"A selector for the left operand. Should not be specified if leftValue is specified.","type":"String","name":"leftField","default":null,"optional":true},{"description":"The value of the right operand. Should not be specified if rightField is specified.","type":"Object","name":"rightValue","default":null,"optional":true},{"description":"A selector for the right operand. Should not be specified if rightValue is specified.","type":"String","name":"rightField","default":null,"optional":true},{"description":"The value of the left operand. Should not be specified if leftField is specified.","type":"Object","name":"leftValue","default":null,"optional":true}],"description":"Creates a unary or binary filter that passes if the left operand, a date range, contains the right operand, a date.","returns":"Filter","name":"Filter.dateRangeContains"}},"args":{"rightField":{"func":null,"args":null,"varName":null,"sourceFrame":null,"string_":"system:time_start"},"leftValue":{"func":{"signature_":{"args":[{"description":"","type":"Object","name":"start","default":null},{"description":"","type":"Object","name":"end","default":null,"optional":true},{"description":"If start and/or end are provided as strings, the time zone in which to interpret them; defaults to UTC.","type":"String","name":"timeZone","default":null,"optional":true}],"description":"Creates a DateRange with the given start (inclusive) and end (exclusive), which may be Dates, numbers (interpreted as milliseconds since 1970-01-01T00:00:00Z), or strings (such as '1996-01-01T08:00'). If 'end' is not specified, a 1-millisecond range starting at 'start' is created.","returns":"DateRange","name":"DateRange","isConstructor":true}},"args":{"start":"2015-12-01","end":"2015-12-31"},"varName":null,"sourceFrame":null}},"varName":null,"sourceFrame":null}]}},"varName":null},"key":{"func":null,"args":null,"varName":null,"sourceFrame":null,"string_":"CLOUD_COVER"}},"varName":null}},"varName":null,"sourceFrame":null}